---
weight: 10
title: Μουσική Πληροφορική
---


* Μουσική Πληροφορική

** Εισαγωγή

* Περιγραφή μαθήματος



* Mαθησιακοί στόχοι 

Οι φοιτητές θα αποκτήσουν ολοκληρωμένη γνώση σχετικά με την μουσική
πληροφορική και μουσική τεχνολογία και θα διδαχθούν θεωρία, ιστορία, έννοιες, και χαρακτηριστικά. Σε αυτό το μάθημα θα διδάχτουν τα βασικά στοιχεία του προγραμματισμού γενικά (λογική, βρόχοι, λειτουργίες, αντικείμενα, κλάσεις). Επίσης, θα εκπαιδευτούν στην αναπτύξη προγραμματιστικών μονάδων (ψηφιακών “μουσικών οργάνων”) τόσο για την παραγωγή ηχητικών συμβάντων καθώς και για τον έλεγχο των χαρακτηριστικών και της συμπεριφορά τους μέσω μονάδων ελέγχου όπως MIDI keyboards, pads, sliders, knobs, camera,  αισθητήρες αφής, κίνησης, κλπ. To SuperCollider είναι μια πλατφόρμα για σύνθεση ήχου και αλγοριθμική σύνθεση, που χρησιμοποιείται από μουσικούς, καλλιτέχνες και ερευνητές που εργάζονται με ήχο.  Μέσω της διαδικασίας του πειραματισμού με αυτά τα εργαλεία, θα κατανοήσουν τις έννοιες του αντικειμενοστραφή προγραμματισμού, της διαδραστικότητας, του διαδραστικού ήχου και σχεδιασμού, της συνδεσημότητας και διασυνδεσιμότητας. Μέσω των μουσικών παραδειγμάτων που παρέχονται σε αυτό το μάθημα, θα προετοιμάσει τους μαθητές να προγραμματίζουν σε C ++, Java και άλλες γλώσσες. Επίσης, οι φοιτητές θα αποκτήσουν τεχνική κατάρτιση, δεξιότητες στη σχεδίαση, σύνθεση και παραγωγή διαδραστικών συστημάτων ήχου για το θέατρο και καλλιτεχνικές εγκαταστάσεις. Επιπλέον, θα κατανοήσουν τον όρο διεπιστημονικότητα και θα μάθουν να συνδέουν την επιστήμη του ήχου: με τις θετικές επιστήμες και τις τεχνολογίες, βάσεις που συνδέονται άμεσα με αυτήν: γνωσιακές επιστήμες, μαθηματικά, φυσική, μηχανική και προγραμματισμό. Κατά αυτό το τρόπο οι φοιτητές θα γνωρίσουν τεχνικές και εργαλεία που μπορούν να χρησιμοποιήσουν και σε άλλες ψηφιακές μορφές τέχνης και ψυχαγωγίας όπως οι καλλιτεχνικές εγκαταστάσεις, βίντεο παιχνίδια και η τέχνη του διαδικτύου.

*Λέξεις Κλειδιά:* αισθητήρια, δυναμικά συστήματα, διαδραστική απόδοση,
διαδραστικός ήχος, διαδραστικά πολυμέσα, διαμοιρασμός, ηχητικός
σχεδιασμός, μουσική πληροφορική, προσαρμοστικός ήχος.

* Προϋποθέσεις 

Οι φοιτητές θα πρέπει να γνωρίζουν βασικές έννοιες της επιστήμης του ήχου, και προγραμματισμού. Επίσης, πρέπει να έχουν στοιχειώδεις γνώσεις σύνθεσης ήχου, διεπαφής χρήστη υπολογιστή. 

Μεθοδολογία και εργαλεία 

Το μάθημα διδάσκεται κυρίως με slides και βίντεο προβολές. Θα γίνονται συζητήσεις σχετικά με έργα καλλιτεχνών και κριτική ανάλυση – τεχνική ανάλυση. 

Στο εργαστήριο θα διδάσκονται o τρόπος λειτουργίας διαφόρων περιβαλλόντων σε σχέση με την υλοποίηση ιδεών καθώς και εφαρμογές για επικοινωνία, οργάνωση και συνεργασία. 

Θα εκπαιδευτούν στα περιβάλλοντα δημιουργικού προγραμματισμού:
 Emacs ως βασικό κειμενογράφο και για διαμοιρασμό αρχείων Git (https://github.com/magit/magit), το SuperCollider και Python  για την επεξεργασία και κατασκευή διαδραστικών συστημάτων ήχου. Επίσης, θα έρθουν σε επαφή με midi controlers, OSC communication, microcontrollers (arduino), και physical computing, τη χρήση αισθητήρων, multitouch technologies κλπ. Επιπλέον, οι φοιτητές θα μάθουν πως να επικοινωνούν να οργανώνουν τα projects τους και να διαμοιράζουν τις επιμέρους διαδικασίες χρησιμοποιώντας εργαλεία όπως μαζικές τεχνικές για επικοινωνία Slack - Git.

* 13 εβδομάδες 

** 1ο μάθημα 

Πρώτη επαφή με τους φοιτητές - Γνωριμία - Εισαγωγή στις έννοιες του μαθήματος.
 
Στο μάθημα αυτό οι φοιτητές θα διδαχθούν έννοιες όπως διαδραστικός ήχος (interactive sound), διαδραστικός σχεδιασμός και ποιές εφαρμογές μπορεί να έχει στην τέχνη. Επίσης, θα διακρίνουν τη χρήση του όρου interactive sound (Collins, 2008) σε σχέση με τη χρήση του ήχου σε διαδραστικά εικονικά περιβάλλοντα και σε βιντεο παιχνίδια.


Programming Interactivity (Noble 2012), κεφάλαιο 1: Introducing
Interaction Design.


** Διαδραστικές ηχητικές εγκαταστάσεις

Παράδειγμα διαδραστική ηχητικής εγκατάστασης.

- The Cave of Sounds (Browne 2013)

Το "Σπήλαιο των Ήχων" είναι μια διαδραστική εγκατάσταση ήχου που
εξερευνά την προϊστορική προέλευση της συλλογικής μουσικής στην σύγχρονη μουσική σκηνή.

#+BEGIN_QUOTE
[[http://caveofsounds.com][The Cave of Sounds]]
#+END_QUOTE

- Circuit Bending and DIY synth making.

Επιπλέον, σε αυτό το μάθημα, θα εισαγάγει τους συμμετέχοντες στα
μουσικά κυκλώματα και πώς θα τα χρησιμοποιήσουν για να κτίσουν το δικό
τους διαδραστικό σύστημα ήχου.
Θα μάθουν, να σχεδιάσουν, να ανακυκλώσουν τα παλιά παιχνίδια και τα όργανα, και να κατασκευάζουν ένα εξειδικευμένο όργανο.


#+BEGIN_QUOTE
[[http://musichackspace.org/events/workshop-complete-circuit-bending-diy-synth-making-led-tasos-stamou/][Music Hackspace]]
#+END_QUOTE

** 2ο μάθημα 

Ιστορική αναδρομή της ηχητικής σύνθεσης ως τέχνη στον οπως για παράδειγμα τα ηχητικά αντικείμενα (sound objects): The Interactive Sound Art of Peter Vogel (http://vogelexhibition.weebly.com), και οι διαδραστικές εγκαταστάσεις άλλων καλλιτεχνών (http://bizarresoundcreatures.com, https://vimeo.com/145978991).

The musician’s interface (Roads, 1996: 611)
Στο μάθημα αυτό οι φοιτητές θα διδαχθούν έννοιες όπως αλγοριθμική
σύνθεση, ενδοσύνδεση (interconnection), τη μετατροπή δεδομένων μέσω
MIDI ελεγκτών ή άλλων συσκευών. 



** Input Devices


Οι μουσικές χειρονομίες μπορούν να εκφράζονται μέσα από ένα ευρύ φάσμα
κινήσεων σώματος. Δεκάδες συσκευές εισόδου έχουν αναπτυχθεί για να
καταγράψουν αυτές τις χειρονομίες.(Roads 1996: 625)

** Instrument design

#+BEGIN_QUOTE

[[https://youtu.be/XejcHPECBUU][Robbie's Tiles]]
#+END_QUOTE

How to...

[[http://bela.io][Bela]]


Capacitive touch sensor-raspberry pi

[[https://learn.adafruit.com/mpr121-capacitive-touch-sensor-on-raspberry-pi-and-beaglebone-black/overview][MPR121]] 




** Mapping the Data from the Input Device


Το μήνυμα που προέρχεται από ψηφιακές συσκευές εισόδου είναι ροές δυαδικών αριθμών. Ένας μικροεπεξεργαστής στο εσωτερικό του συνθέτη λήψης πρέπει να αποκωδικοποιήσει αυτές τις ροές πριν να διατάξει τη μηχανή σύνθεσης να εκπέμψει ήχο


** Remote Controllers


** 3o μάθημα 

Εισαγωγή στο σχεδιασμό ήχου (προέλευση, ορισμός, διαδικασίες, πεδία εφαρμογής). 
Στο μάθημα αυτό οι φοιτητές θα γνωρίσουν προγράμματα και λειτουργίες σχετικά με την σχεδίαση ήχων (sound design) όπως το προγραμματιστικό περιβάλλον SuperCollider.

#+BEGIN_QUOTE
SuperCollider example:
Creating a sine wave
#+END_QUOTE


#+BEGIN_SRC js
{SinOsc.ar(440, 0, 0.3)}.play
#+END_SRC

#+BEGIN_QUOTE
Additive synthesis
#+END_QUOTE
#+BEGIN_SRC js
{SinOsc.ar(440, 0, 0.4)+SinOsc.ar(660, 0, 0.3)}.play;
#+END_SRC

#+BEGIN_QUOTE
Substractive synthesis
#+END_QUOTE

#+BEGIN_SRC js
{LPF.ar(SinOsc.ar(440, 0, 0.4), 6000, 0.3)}.play;
#+END_SRC

#+BEGIN_QUOTE
Granular synthesis
#+END_QUOTE

#+BEGIN_SRC js
SynthDef(\granular, {|out = 0, trig = 1, dur = 0.1, sndbuf, pos = 0.2, 
rate = 1, pan = 0, amp = 0.4|
var env, source;
env = EnvGen.kr(Env.adsr, 1, doneAcion: 2);
source = Out.ar(out, GrainBuf.ar(2, Impulse.kr(trig), dur, sndbuf, rate, pos, 2,
pan, envbuf) * env)
}).add;

#+END_SRC

The SuperCollider Book (Wilson et al. 2011): Κεφάλαια 1, 2: Beginner’s Tutorial, The Unit Generator.
Επίσης, θα έρθουν σε επαφή με το Emacs για να μάθουν να επεξεργάζονται
να οργανώνουν και να διαμοιράζουν τα αρχεία τους.
(https://www.gnu.org/software/emacs/tour/).



** 4ο μάθημα 

Στο μάθημα αυτο θα διδαχθεί η έννοια της “διαδραστικής απόδοσης”
(Interactive performance). Και ποία είναι συνήθως η σειρά πρακτικών
που προσφέρουν στους performers (συνήθως χορευτές ή μουσικούς) έλεγχο
των οπτικοακουστικών μέσων σε πραγματικό χρόνο, χρησιμοποιώντας τις
φυσικές τους κινήσεις και χειρονομίες. (Ng, 2002). 

Εισαγωγή σε περιβάλλοντα (Github, Bitbucket) για οργάνωση και διαμοιρασμό αρχείων-Git. 
Ίδρυση λογαριασμού στο Slack και Github.

#+BEGIN_QUOTE
Github
#+END_QUOTE

Οι φοιτητές θα μάθουν να οργανώνουν τα projects τους και να διαμοιράζουν τις επιμέρους διαδικασίες χρησιμοποιώντας εργαλεία όπως μαζικές τεχνικές για επικοινωνία Slack – Git. 

** 5o μάθημα

Προσαρμοστικό ακουστικό σκηνικό (adaptive audio scenography).
Παράδειγμα σχεδιασμού διαδραστικού συστήματος ήχου σε σχέση με το θέατρο και performance. Ανάλυση του τρόπου και των μέσων υλοποίησης όπως ασύρματοι αισθητήρες που βρίσκονται τόσο στο σώμα ενός εκτελεστή όσο και στο χώρο του θεάτρου. Τα συνεχώς γεννημένα δεδομένα τόσο από τον ερμηνευτή όσο και από το περιβάλλον χρησιμοποιούνται στη συνέχεια για να επηρεάσουν αυτό που ονομάζουμε προσαρμοστικό ακουστικό σκηνικό (adaptive audio scenography). (Baalman, Grigsby, Salter 2007: 178)

*Github*:
 
-	Create a Repository
-	Create a Branch
-	Make a Commit
-   Push a Commit.

[[https://guides.github.com/activities/hello-world/][GitHub Hello world]]


[[https://gist.github.com/davfre/8313299][Github example]]

** 6ο μάθημα

Διαδραστικά συστήματα ήχου για θέατρο και εγκαταστάσεις. 
Εισαγωγή στο physical computing- microcontrollers.

 Programming Interactivity (Noble 2012): Κεφάλαιο 4: Arduino.

Εισαγωγή στο Raspberry Pi 
(https://www.raspberrypi.org/learning/hardware-guide/).

Εισαγωγή στην Python 
(https://www.python.org/doc/).

#+BEGIN_QUOTE
Python
#+END_QUOTE

#+BEGIN_SRC python

# Python 3: Fibonacci series up to n
 def fib(n):
     a, b = 0, 1
     while a < n:
         print(a, end=' ')
         a, b = b, a+b
     print()
 fib(1000)

#+END_SRC
Στο μάθημα αυτό οι μαθητές θα μάθουν να εγκαθιστούν στο Raspberry Pi λειτουργικά σύστημα όπως Linux DebianJessie, καθώς και άλλα προγράμματα όπως το Emacs ως βασικό κειμενογράφο και για διαμοιρασμό αρχείων Git (Magit), το SuperCollider για την επεξεργασία και κατασκευή διαδραστικών συστημάτων ήχου και την Python για την επικοινωνία με τους αισθητηρες. 

** Harware set up

[[http://supercollider.github.io/development/building-raspberrypi][Building from Source on Raspberry]]

#+BEGIN_QUOTE
- connect an ethernet cable from the network router to the rpi
- insert the sd card and usb soundcard
- last connect usb power from a 5V@1A power supply

#+END_QUOTE

** login & preparations
#+BEGIN_SRC sh
$ ssh pi@raspberrypi.local #from your laptop, default password is raspberry
$ sudo raspi-config #change password, expand file system, reboot and log in again with ssh
#+END_SRC

#+BEGIN_QUOTE
update the system, install required libraries & compilers
#+END_QUOTE

#+BEGIN_SRC shell
$sudo apt-get update

$sudo apt-get upgrade

$sudo apt-get install alsa-base libicu-dev libasound2-dev libsamplerate0-dev libsndfile1-dev libreadline-dev libxt-dev libudev-dev libavahi-client-dev libfftw3-dev cmake git gcc-4.8 g++-4.8

#+END_SRC

#+BEGIN_QUOTE
compile & install jackd (no d-bus)
#+END_QUOTE

#+BEGIN_SRC shell
$git clone git://github.com/jackaudio/jack2 --depth 1
$cd jack2
$./waf configure --alsa #note: here we use the default gcc-4.9
$./waf build
$sudo ./waf install
$sudo ldconfig
$cd ..
$rm -rf jack2
$sudo nano /etc/security/limits.conf #and add the following two lines at the end
    * @audio - memlock 256000
    * @audio - rtprio 75
 exit #and log in again to make the limits.conf settings work

#+END_SRC

#+BEGIN_QUOTE
compile & install sc master
#+END_QUOTE

#+BEGIN_SRC shell
$git clone --recursive git://github.com/supercollider/supercollider
#optionally add –depth 1 here if you only need master
$cd supercollider
$git submodule init && git submodule update
$mkdir build && cd build
$export CC=/usr/bin/gcc-4.8 #here temporarily use the older gcc-4.8
$export CXX=/usr/bin/g++-4.8
$cmake -L -DCMAKE_BUILD_TYPE="Release" -DBUILD_TESTING=OFF -DSSE=OFF -DSSE2=OFF
-DSUPERNOVA=OFF -DNOVA_SIMD=ON -DNATIVE=OFF -DSC_ED=OFF
-DSC_WII=OFF -DSC_IDE=OFF -DSC_QT=OFF -DSC_EL=OFF -DSC_VIM=OFF
-DCMAKE_C_FLAGS="-mtune=cortex-a7 -mfloat-abi=hard -mfpu=neon
-funsafe-math-optimizations" 
-DCMAKE_CXX_FLAGS="-mtune=cortex-a7 -mfloat-abi=hard -mfpu=neon
-funsafe-math-optimizations" ..
$make -j 4 #leave out flag j4 on single core rpi models
$sudo make install
$sudo ldconfig
$cd ../..
$rm -rf supercollider
$sudo mv /usr/local/share/SuperCollider/SCClassLibrary/Common/GUI
/usr/local/share/SuperCollider/SCClassLibrary/scide_scqt/GUI
$sudo mv /usr/local/share/SuperCollider/SCClassLibrary/JITLib/GUI
/usr/local/share/SuperCollider/SCClassLibrary/scide_scqt/JITLibGUI
#+END_SRC

#+BEGIN_QUOTE
start jack & sclang & test
#+END_QUOTE

#+BEGIN_SRC shell
$jackd -P75 -dalsa -dhw:1 -p1024 -n3 -s -r44100 & 
#edit -dhw:1 to match your soundcard. usually it is 1 for usb, or,jackd -P75-dalsa -dhw:UA25EX -p1024
-n3 -s -r44100 &
$sclang #should start sc and compile the class library with 
only 3 harmless class overwrites warnings
    $s.boot #should boot the server
    $ a= {SinOsc.ar([400, 404])}.play #should play sound in both channels
    $ a.free
     {1000000.do{2.5.sqrt}}.bench #benchmark: ~0.89 for rpi2, ~3.1 for rpi1
    $ a= {Mix(50.collect{RLPF.ar(SinOsc.ar)});DC.ar(0)}.play#benchmark
    $ s.dump #avgCPU should show ~19% for rpi2 and ~73% for rpi1
    $ a.free
    $ 0.exit #quit sclang
$ pkill jackd #quit jackd
#+END_SRC

** 7ο μάθημα 

Χρήση αισθητήρων: αφής, κίνησης, ελαστικότητας, καμερας. 
Programming Interactivity (Noble 2012): κεφάλαιο 14, Detection and Gestures.

Στο μάθημα αυτό οι φοιτητές θα πειραματιστούν με διάφορους αισθητήρες και θα συζητηθούν συμπεράσματα σε σχέση με την χρήση τους στον σχεδιασμό διαδραστικών συστημάτων ήχου. 

Επίσης, θα έρθουν σε επαφή με το Arduino και θα πειραματιστούν με
κάποια παραδείγματα
(https://www.arduino.cc/en/Tutorial/BuiltInExamples).

Θα γίνει χρήση βιβλιοθηκών Python-για OSC επικοινωνία (https://pypi.python.org/pypi/python-osc) –  με το SuperCollider.

Δημιουργία ομάδων για την σχεδίαση και υλοποίηση διαδραστικού συστήματος ήχου.

Συζήτηση σε σχέση με τα projects των φοιτητών. 

** 8o μάθημα 

Physical computing, αλγοριθμική σύνθεση, ηχητικός σχεδιασμός. 

The SuperCollider Book (Wilson et al. 2011): Κεφάλαια 3, 4: 
Composition with SuperCollider, In and Outs: SuperCollider and External Devices.  

Συνέχεια εκμάθησης σε περιβάλλοντα για οργάνωση και διαμοιρασμό αρχείων-Git-Magit. 

*Git*:	
- Open a Pull Request
- Merge Pull Request

Επίβλεψη και συζήτηση με τις ομάδες φοιτητών για την πορεία των projects 

Κατάθεση προτάσεων έργου από τις ομάδες των φοιτητών. 

** 9ο μάθημα 

Σχεδίαση διεπαφής και μονάδων ελέγχου.

Programming Interactivity (Noble 2012), κεφάλαιο: Interfaces and Controls

Συζήτηση με τις ομάδες φοιτητών για την πορεία των projects 

** 10ο μάθημα 

Physical computing, αλγοριθμική σύνθεση, ηχητικός σχεδιασμός συνέχεια. 

The SuperCollider Book (Wilson et al. 2011), κεφάλαια 5, 6: 
Programming in SuperCollider, Events and Patterns. 

Συνέχεια εκμάθησης σε περιβάλλοντα για οργάνωση και διαμοιρασμό 
αρχείων-Git-Magit. 

Επίβλεψη και συζήτηση με τις ομάδες φοιτητών για την πορεία των projects 

** 11ο μάθημα 

Στο μάθημα αυτό οι φοιτητές θα διδαχθούν νέες μεθόδους σύνθεσης και εκτέλεσης ενός ηχητικού έργου με τον ρόλο του κοινού ως μέρος της συνθετικής διαδικασίας και πώς μπορεί να ενισχυθεί μέσω της διαδραστικότητας (gestural interaction, intelligent sensor environments -sensate spaces) (Bellhartz, 2007).

Programming interactivity (Noble 2012), κεφάλαιο 15: Movement and Location

Επίβλεψη και συζήτηση με τις ομάδες φοιτητών για την πορεία των projects. 

** 12ο μάθημα 

Επίβλεψη και συζήτηση με τις ομάδες φοιτητών για την πορεία των 
projects 

** 13ο μάθημα 

Παρουσίαση των projects 

* Τρόπος εξέτασης 

Σαν εργασία οι φοιτητές θα πρέπει να παραδώσουν και να παρουσιάσουν: 

-	την ιδέα του έργου και τον τρόπο υλοποίησης - σχεδίασης της σε ένα κείμενο μαζί με, 

-	τον πηγαίο κώδικα και την εφαρμογή αν υπάρχει, 

Η αξιολόγηση των φοιτητών θα βασίζεται στα εξής κριτήρια: 

- αρτιότητα τελικού προϊόντος: 3

- δυσκολία κατασκευής: 1

- πρωτότυπη ιδέα: 1 

- τελική παρουσίαση: 2 

- γραπτό: 3 


* Προτεινόμενη Βιβλιογραφία ιστογραφία

** Βιβλία 

Baalman, Marije A. J., Daniel Moody-Grigsby, and Christopher L. Salter. 2007. “Schwelle: Sensor Augmented, Adaptive Sound Design for Live Theatrical Performance.” In Proceedings of the 7th International Conference on New Interfaces for Musical Expression, 178–184. NIME ’07. New York, NY, USA: ACM. doi:10.1145/1279740.1279774.

Beilharz, Kirsty, and Sam Ferguson. 2007. “Gestural Hyper Instrument Collaboration with Generative Computation for Real Time Creativity.” In Proceedings of the 6th ACM SIGCHI Conference on Creativity & Cognition, 213–222. C&C ’07. New York, NY, USA: ACM. doi:10.1145/1254960.1254990.

Birchfield, David, Kelly Phillips, Assegid Kidané, and David Lorig. 2006. “Interactive Public Sound Art: A Case Study.” In Proceedings of the 2006 Conference on New Interfaces for Musical Expression, 43–48. NIME ’06. Paris, France, France: IRCAM — Centre Pompidou. http://dl.acm.org/citation.cfm?id=1142215.1142223.

Blaine, Tina, and Tim Perkis. 2000. “The Jam-O-Drum Interactive Music System: A Study in Interaction Design.” In Proceedings of the 3rd Conference on Designing Interactive Systems: Processes, Practices, Methods, and Techniques, 165–173. DIS ’00. New York, NY, USA: ACM. doi:10.1145/347642.347705.

Collins, Karen. 2008. Game Sound: An Introduction to the History, Theory, and Practice of Video Game Music and Sound Design. 1 edition. Cambridge, Mass: The MIT Press.
“First Edition Community Release | Infrared | Optical Filter.” 2017. Scribd. Accessed August 29. https://www.scribd.com/document/46574382/First-Edition-Community-Release.

Kwastek, Katja. 2015. Aesthetics of Interaction in Digital Art. Reprint edition. Cambridge, Mass.: The MIT Press.

Licht, Alan, and Jim O’Rourke. 2007. Sound Art: Beyond Music, Between Categories. Har/Com edition. New York, N.Y: Rizzoli.

McCartney, James. 2011. The SuperCollider Book. Edited by Scott Wilson, David Cottle, and Nick Collins. Cambridge, Mass: The MIT Press.

Miranda, Eduardo. 2002. Computer Sound Design: Synthesis Techniques and Programming. 2 edition. Amsterdam: Focal Press.

Noble, Joshua. 2012. Programming Interactivity. 2 edition. Beijing ; Sebastopol, CA: O’Reilly Media.

Roads, Curtis. 1996. The Computer Music Tutorial. Cambridge, Mass: MIT Press.

Rogers, Yvonne, Helen Sharp, and Jenny Preece. 2011. Interaction Design: Beyond Human - Computer Interaction. 3 edition. Chichester, West Sussex, U.K: Wiley.

** Ιστογραφία

https://www.gnu.org/software/emacs/

http://supercollider.github.io

http://www.xbox.com/en-US/xbox-one/accessories/kinect

https://learn.adafruit.com/adafruit-mpr121-12-key-capacitive-touch-sensor-breakout-tutorial/overview

https://www.adafruit.com/product/189

https://www.youtube.com/watch?v=hP36xoPXDnM

https://www.youtube.com/watch?v=wYU18eiiFt4

https://www.youtube.com/watch?v=xEEKBbKvuMQ

https://www.youtube.com/watch?v=lQUy436XQM4

https://www.youtube.com/watch?v=hh_5_CAySXY

https://diyhacking.com/raspberry-pi-gpio-control/

http://bizarresoundcreatures.com

https://vimeo.com/145978991









