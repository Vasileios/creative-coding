<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Creative Coding</title>
    <link>https://vasileios.github.io/creative-coding/</link>
    <description>Recent content on Creative Coding</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://vasileios.github.io/creative-coding/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://vasileios.github.io/creative-coding/introduction/creative_coding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/creative-coding/introduction/creative_coding/</guid>
      <description>chapter 1  About     About   Vasilis Agiomyrgianakis (BasMyr)
 My research imperatives run along the threads of trans-mediation, inter-semiotic translation, post-disciplinarity (interdisciplinarity, multidiscplinarity) and the general concerns of Human Computer Interaction (HCI).
 A large part of my contemporary practices in creating audiovisual materials is through creative coding. In coding there is the possibility to use plenty of expressions or functionalities. Coding and creative writing have many similarities in the way the writer-scripter organises the text with ideas; the mind can become creative; as it is, coding helps to increase imagination.</description>
    </item>
    
    <item>
      <title>Interdisciplinarity</title>
      <link>https://vasileios.github.io/creative-coding/introduction/interdisciplinarity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/creative-coding/introduction/interdisciplinarity/</guid>
      <description>chapter 1   Interdisciplinarity   Science and art
Biology and sound/music-image   Data driven sonification visualisation.
 &amp;#34;The L-Systems, also known as Lindenmayer Systems, are a class of algorithms for the production of structures based on recursive rewriting rules. “The L-systems are widely used in the composition of graphics mainly for the production of complex forms of plants as well as the imitation of other natural forms ”(Prusinkiewicz and Lindenmayer 1990; Rozenberg and Grzegorz 1992).</description>
    </item>
    
    <item>
      <title>Shell</title>
      <link>https://vasileios.github.io/creative-coding/code_tips/shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/creative-coding/code_tips/shell/</guid>
      <description>chapter 2   Shell  Installing tmux   tmux is a &amp;#34;terminal multiplexer&amp;#34;, it enables a number of terminals (or windows) to be accessed and controlled from a single terminal. tmux is intended to be a simple, modern, BSD-licensed alternative to programs such as GNU screen.
 This release runs on OpenBSD, FreeBSD, NetBSD, Linux, OS X and Solaris.
 tmux depends on libevent 2.x. Download it from:</description>
    </item>
    
    <item>
      <title>Algorithmic Composition</title>
      <link>https://vasileios.github.io/creative-coding/introduction/algorithmic_composition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/creative-coding/introduction/algorithmic_composition/</guid>
      <description>chapter 1   Algorithmic Composition   Algorithm is:
  A set of mathematical instructions that must be followed in a fixed order, and that, especially if given to a computer, will help to calculate an answer to a mathematical
  problem [1].
  A systematic procedure that produces – in a finite number of steps the answer to a question or the solution of a problem [2].</description>
    </item>
    
    <item>
      <title>Emacs</title>
      <link>https://vasileios.github.io/creative-coding/code_tips/emacs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/creative-coding/code_tips/emacs/</guid>
      <description>chapter 2   Emacs   GNU Emacs An extensible, customizable, free/libre text editor — and more. At its core is an interpreter for Emacs Lisp, a dialect of the Lisp programming language with extensions to support text editing. …emacs
Install packages   Install org-plus-contrib
;; add this to your Emacs init file to be able to list the Org mode archives: (require &amp;#39;package) (add-to-list &amp;#39;package-archives &amp;#39;(&amp;#34;org&amp;#34; .</description>
    </item>
    
    <item>
      <title>ipython - Python</title>
      <link>https://vasileios.github.io/creative-coding/code_tips/ipython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/creative-coding/code_tips/ipython/</guid>
      <description>chapter 2   iPython   Choose Python to see the code.
 Choose Python to see the code.
  Introduction to Python (https://www.python.org/doc/).
 Python
 # Python 3: Fibonacci series up to n def fib(n): a, b = 0, 1 while a &amp;lt; n: print(a, end=&amp;#39; &amp;#39;) a, b = b, a+b print() fib(1000)  IPython-notebook    IPython notebook is used to analyse data and for data visualisation.</description>
    </item>
    
    <item>
      <title>Javascript</title>
      <link>https://vasileios.github.io/creative-coding/code_tips/javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/creative-coding/code_tips/javascript/</guid>
      <description>chapter 2   Javascript   Javascript is the tool to work with browser and used also for interactive programming purposes.
 Getting started with Javascript
 Learn about javascript here and also here
 Lets get started with p5.js example such as pointillism
 p5.js is a JS client-side library for creating graphic and interactive experiences, based on the core principles of Processing.
 for more info see here</description>
    </item>
    
    <item>
      <title>openFrameworks</title>
      <link>https://vasileios.github.io/creative-coding/code_tips/openframeworks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/creative-coding/code_tips/openframeworks/</guid>
      <description>chapter 2   openFrameworks  MSAFluids-Kinect   MSAFluids-data visualisation   Choose C++
  ofApp.h
 #pragma once  #include &amp;#34;MSAFluid.h&amp;#34;//#include &amp;#34;MSATimer.h&amp;#34; #include &amp;#34;ParticleSystem.h&amp;#34;#include &amp;#34;ofMain.h&amp;#34;#include &amp;#34;ofxOpenCv.h&amp;#34;#include &amp;#34;ofxXmlSettings.h&amp;#34;#include &amp;#34;ofxUI.h&amp;#34;#include &amp;#34;ofxGui.h&amp;#34;#include &amp;#34;ofxOsc.h&amp;#34;#define HOST &amp;#34;localhost&amp;#34; #define PORT 12345  #define NUM_MSG_STRINGS 20  // comment this line out if you don&amp;#39;t wanna use TUIO // you will need ofxTUIO &amp;amp; ofxOsc #define USE_TUIO  // comment this line out if you don&amp;#39;t wanna use the GUI // you will need ofxSimpleGuiToo, ofxMSAInteractiveObject &amp;amp; ofxXmlSettings // if you don&amp;#39;t use the GUI, you won&amp;#39;t be able to see the fluid parameters #define USE_GUI  #ifdef USE_TUIO #include &amp;#34;ofxTuio.</description>
    </item>
    
    <item>
      <title>Micro-computing</title>
      <link>https://vasileios.github.io/creative-coding/code_tips/microcomputing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/creative-coding/code_tips/microcomputing/</guid>
      <description>chapter 2   Micro-computing  Physical computing   Introduction to physical computing - microcontrollers. Programming Interactivity (Noble 2012): Chapter 4: Arduino.
 Introduction to Raspberry Pi (https://www.raspberrypi.org/learning/hardware-guide/).
  Interactive Performance.   Artistic methods and techniques which give to performers (usually dancers or musicians) control of their medium in real time.
 wireless sensors found both in the body of a performer and in the theater.</description>
    </item>
    
    <item>
      <title>Suggested Bibliography</title>
      <link>https://vasileios.github.io/creative-coding/code_tips/suggestedbibliography/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/creative-coding/code_tips/suggestedbibliography/</guid>
      <description> chapter 2   Suggested Bibliography  Books   END … END
    </description>
    </item>
    
    <item>
      <title></title>
      <link>https://vasileios.github.io/creative-coding/_footer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/creative-coding/_footer/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
